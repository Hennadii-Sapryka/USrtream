@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Home>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.PublishedModels;

@section Head {
    <link rel="stylesheet" href="@Url.Content("~/css/landing-page.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/landing-page/text-section.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/landing-page/image-section.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/landing-page/columns-section.css")" />

    <link rel="stylesheet" href="@Url.Content("~/css/mobile/landing-page.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/mobile/landing-page/text-section.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/mobile/landing-page/image-section.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/mobile/landing-page/columns-section.css")" />
}



@functions {
    string GetSectionTemplate(IPublishedContent section)
    {
        var path = "Landing Page";
        var template = section switch
        {
            LandingPageTextSection => "LandingPageTextSection",
            LandingPageImageSection => "LandingPageImageSection",
            LandingPageColumnsSection => "LandingPageColumnsSection",
            _ => string.Empty
        };
        return $"{path}/{template}";
    }
}

@{
    Layout = "_Layout";

    ViewBag.OnHomePage = true;
    var homeContent = Model.Children<HomePageContent>().FirstOrDefault();
    if (homeContent is null) return;

    var textSections = homeContent.Children<LandingPageTextSection>().ToList();
    var imageSections = homeContent.Children<LandingPageImageSection>().ToList();
    var columnsSections = homeContent.Children<LandingPageColumnsSection>().ToList();

    var sections = new List<IPublishedContent>();
    sections.AddRange(textSections);
    sections.AddRange(imageSections);
    sections.AddRange(columnsSections);
    sections = sections.OrderBy(section => section.SortOrder).ToList();
}

@foreach (var section in sections)
{
    @await Html.PartialAsync(GetSectionTemplate(section), section)
}